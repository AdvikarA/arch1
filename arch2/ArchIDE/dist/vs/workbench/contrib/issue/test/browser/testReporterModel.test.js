/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import assert from 'assert';
import { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';
import { IssueReporterModel } from '../../browser/issueReporterModel.js';
import { normalizeGitHubUrl } from '../../common/issueReporterUtil.js';
suite('IssueReporter', () => {
    ensureNoDisposablesAreLeakedInTestSuite();
    test('sets defaults to include all data', () => {
        const issueReporterModel = new IssueReporterModel();
        assert.deepStrictEqual(issueReporterModel.getData(), {
            allExtensions: [],
            includeSystemInfo: true,
            includeExtensionData: true,
            includeWorkspaceInfo: true,
            includeProcessInfo: true,
            includeExtensions: true,
            includeExperiments: true,
            issueType: 0
        });
    });
    test('serializes model skeleton when no data is provided', () => {
        const issueReporterModel = new IssueReporterModel({});
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('serializes GPU information when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {
                    '2d_canvas': 'enabled',
                    'checker_imaging': 'disabled_off'
                }
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off|
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('serializes experiment info when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {
                    '2d_canvas': 'enabled',
                    'checker_imaging': 'disabled_off'
                }
            },
            experimentInfo: 'vsliv695:30137379\nvsins829:30139715'
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off|
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|
</details>Extensions: none<details>
<summary>A/B Experiments</summary>

\`\`\`
vsliv695:30137379
vsins829:30139715
\`\`\`

</details>

<!-- generated by issue reporter -->`);
    });
    test('serializes Linux environment information when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {},
                linuxEnv: {
                    desktopSession: 'ubuntu',
                    xdgCurrentDesktop: 'ubuntu',
                    xdgSessionDesktop: 'ubuntu:GNOME',
                    xdgSessionType: 'x11'
                }
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status||
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|
|DESKTOP_SESSION|ubuntu|
|XDG_CURRENT_DESKTOP|ubuntu|
|XDG_SESSION_DESKTOP|ubuntu:GNOME|
|XDG_SESSION_TYPE|x11|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('serializes remote information when data is provided', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '',
                screenReader: 'no',
                gpuStatus: {
                    '2d_canvas': 'enabled',
                    'checker_imaging': 'disabled_off'
                },
                remoteData: [
                    {
                        hostName: 'SSH: Pineapple',
                        machineInfo: {
                            os: 'Linux x64 4.18.0',
                            cpus: 'Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz (2 x 2294)',
                            memory: '8GB',
                            vmHint: '100%'
                        }
                    }
                ]
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:
Remote OS version: Linux x64 4.18.0

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off|
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv||
|Screen Reader|no|
|VM|0%|

|Item|Value|
|---|---|
|Remote|SSH: Pineapple|
|OS|Linux x64 4.18.0|
|CPUs|Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz (2 x 2294)|
|Memory (System)|8GB|
|VM|100%|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('escapes backslashes in processArgs', () => {
        const issueReporterModel = new IssueReporterModel({
            issueType: 0,
            systemInfo: {
                os: 'Darwin',
                cpus: 'Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)',
                memory: '16.00GB',
                vmHint: '0%',
                processArgs: '\\\\HOST\\path',
                screenReader: 'no',
                remoteData: [],
                gpuStatus: {}
            }
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes:

<details>
<summary>System Info</summary>

|Item|Value|
|---|---|
|CPUs|Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz (8 x 2800)|
|GPU Status||
|Load (avg)|undefined|
|Memory (System)|16.00GB|
|Process Argv|\\\\\\\\HOST\\\\path|
|Screen Reader|no|
|VM|0%|
</details>Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('should supply mode if applicable', () => {
        const issueReporterModel = new IssueReporterModel({
            isUnsupported: true,
            restrictedMode: true
        });
        assert.strictEqual(issueReporterModel.serialize(), `
Type: <b>Bug</b>

undefined

VS Code version: undefined
OS version: undefined
Modes: Restricted, Unsupported

Extensions: none
<!-- generated by issue reporter -->`);
    });
    test('should normalize GitHub urls', () => {
        [
            'https://github.com/repo',
            'https://github.com/repo/',
            'https://github.com/repo.git',
            'https://github.com/repo/issues',
            'https://github.com/repo/issues/',
            'https://github.com/repo/issues/new',
            'https://github.com/repo/issues/new/'
        ].forEach(url => {
            assert.strictEqual('https://github.com/repo', normalizeGitHubUrl(url));
        });
    });
    test('should have support for filing on extensions for bugs, performance issues, and feature requests', () => {
        [
            0 /* IssueType.Bug */,
            2 /* IssueType.FeatureRequest */,
            1 /* IssueType.PerformanceIssue */
        ].forEach(type => {
            const issueReporterModel = new IssueReporterModel({
                issueType: type,
                fileOnExtension: true
            });
            assert.strictEqual(issueReporterModel.fileOnExtension(), true);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdFJlcG9ydGVyTW9kZWwudGVzdC5qcyIsInNvdXJjZVJvb3QiOiJmaWxlOi8vL1VzZXJzL2FkdmlrYXIvRG9jdW1lbnRzL2FyY2hpdGVjdC9hcmNoMi9BcmNoSURFL3NyYy8iLCJzb3VyY2VzIjpbInZzL3dvcmtiZW5jaC9jb250cmliL2lzc3VlL3Rlc3QvYnJvd3Nlci90ZXN0UmVwb3J0ZXJNb2RlbC50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBRWhHLE9BQU8sTUFBTSxNQUFNLFFBQVEsQ0FBQztBQUM1QixPQUFPLEVBQUUsdUNBQXVDLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNuRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUV6RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUV2RSxLQUFLLENBQUMsZUFBZSxFQUFFLEdBQUcsRUFBRTtJQUMzQix1Q0FBdUMsRUFBRSxDQUFDO0lBQzFDLElBQUksQ0FBQyxtQ0FBbUMsRUFBRSxHQUFHLEVBQUU7UUFDOUMsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLGtCQUFrQixFQUFFLENBQUM7UUFDcEQsTUFBTSxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNwRCxhQUFhLEVBQUUsRUFBRTtZQUNqQixpQkFBaUIsRUFBRSxJQUFJO1lBQ3ZCLG9CQUFvQixFQUFFLElBQUk7WUFDMUIsb0JBQW9CLEVBQUUsSUFBSTtZQUMxQixrQkFBa0IsRUFBRSxJQUFJO1lBQ3hCLGlCQUFpQixFQUFFLElBQUk7WUFDdkIsa0JBQWtCLEVBQUUsSUFBSTtZQUN4QixTQUFTLEVBQUUsQ0FBQztTQUNaLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLG9EQUFvRCxFQUFFLEdBQUcsRUFBRTtRQUMvRCxNQUFNLGtCQUFrQixHQUFHLElBQUksa0JBQWtCLENBQUMsRUFBRSxD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