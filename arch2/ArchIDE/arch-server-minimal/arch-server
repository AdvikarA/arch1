#!/usr/bin/env bash

# Minimal ArchIDE Server Launcher
# Optimized lightweight deployment package

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
NODE_BINARY="${NODE_BINARY:-node}"

echo "üöÄ ArchIDE Minimal Server Starting..."

# Check if node is available
if ! command -v "$NODE_BINARY" &> /dev/null; then
    echo "‚ùå Node.js not found. Please install Node.js or set NODE_BINARY environment variable."
    exit 1
fi

# Validate essential files
if [ ! -f "$SCRIPT_DIR/arch-server-main.js" ]; then
    echo "‚ùå arch-server-main.js not found at: $SCRIPT_DIR/arch-server-main.js"
    exit 1
fi

# Default enhanced features
ENHANCED_PROTOCOL="${ARCH_SERVER_ENHANCED_PROTOCOL:-true}"
SECURE_WEBSOCKET="${ARCH_SERVER_SECURE_WEBSOCKET:-true}"
FILE_SYSTEM_CONTROL="${ARCH_SERVER_FILE_SYSTEM_CONTROL:-true}"
TERMINAL_CONTROL="${ARCH_SERVER_TERMINAL_CONTROL:-true}"

# Build command with enhanced features
CMD_ARGS=("--start-server")

if [ "$ENHANCED_PROTOCOL" = "true" ]; then
    CMD_ARGS+=(--enhanced-protocol)
fi

if [ "$SECURE_WEBSOCKET" = "true" ]; then
    CMD_ARGS+=(--secure-websocket)
fi

if [ "$FILE_SYSTEM_CONTROL" = "true" ]; then
    CMD_ARGS+=(--file-system-control)
fi

if [ "$TERMINAL_CONTROL" = "true" ]; then
    CMD_ARGS+=(--terminal-control)
fi

# Add any additional arguments passed to this script
CMD_ARGS+=("$@")

echo "‚úÖ Starting ArchIDE server with enhanced capabilities:"
echo "   ‚Ä¢ Enhanced Protocol: $ENHANCED_PROTOCOL"
echo "   ‚Ä¢ Secure WebSocket: $SECURE_WEBSOCKET"
echo "   ‚Ä¢ File System Control: $FILE_SYSTEM_CONTROL"
echo "   ‚Ä¢ Terminal Control: $TERMINAL_CONTROL"
echo ""

# Change to script directory and run
cd "$SCRIPT_DIR"
exec "$NODE_BINARY" "arch-server-main.js" "${CMD_ARGS[@]}"
