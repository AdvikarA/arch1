/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
import { localize } from '../../../../../nls.js';
import { mergeCurrentHeaderBackground, mergeIncomingHeaderBackground, registerColor, transparent } from '../../../../../platform/theme/common/colorRegistry.js';
export const diff = registerColor('mergeEditor.change.background', '#9bb95533', localize('mergeEditor.change.background', 'The background color for changes.'));
export const diffWord = registerColor('mergeEditor.change.word.background', { dark: '#9ccc2c33', light: '#9ccc2c66', hcDark: '#9ccc2c33', hcLight: '#9ccc2c66', }, localize('mergeEditor.change.word.background', 'The background color for word changes.'));
export const diffBase = registerColor('mergeEditor.changeBase.background', { dark: '#4B1818FF', light: '#FFCCCCFF', hcDark: '#4B1818FF', hcLight: '#FFCCCCFF', }, localize('mergeEditor.changeBase.background', 'The background color for changes in base.'));
export const diffWordBase = registerColor('mergeEditor.changeBase.word.background', { dark: '#6F1313FF', light: '#FFA3A3FF', hcDark: '#6F1313FF', hcLight: '#FFA3A3FF', }, localize('mergeEditor.changeBase.word.background', 'The background color for word changes in base.'));
export const conflictBorderUnhandledUnfocused = registerColor('mergeEditor.conflict.unhandledUnfocused.border', { dark: '#ffa6007a', light: '#ffa600FF', hcDark: '#ffa6007a', hcLight: '#ffa6007a', }, localize('mergeEditor.conflict.unhandledUnfocused.border', 'The border color of unhandled unfocused conflicts.'));
export const conflictBorderUnhandledFocused = registerColor('mergeEditor.conflict.unhandledFocused.border', '#ffa600', localize('mergeEditor.conflict.unhandledFocused.border', 'The border color of unhandled focused conflicts.'));
export const conflictBorderHandledUnfocused = registerColor('mergeEditor.conflict.handledUnfocused.border', '#86868649', localize('mergeEditor.conflict.handledUnfocused.border', 'The border color of handled unfocused conflicts.'));
export const conflictBorderHandledFocused = registerColor('mergeEditor.conflict.handledFocused.border', '#c1c1c1cc', localize('mergeEditor.conflict.handledFocused.border', 'The border color of handled focused conflicts.'));
export const handledConflictMinimapOverViewRulerColor = registerColor('mergeEditor.conflict.handled.minimapOverViewRuler', '#adaca8ee', localize('mergeEditor.conflict.handled.minimapOverViewRuler', 'The foreground color for changes in input 1.'));
export const unhandledConflictMinimapOverViewRulerColor = registerColor('mergeEditor.conflict.unhandled.minimapOverViewRuler', '#fcba03FF', localize('mergeEditor.conflict.unhandled.minimapOverViewRuler', 'The foreground color for changes in input 1.'));
export const conflictingLinesBackground = registerColor('mergeEditor.conflictingLines.background', '#ffea0047', localize('mergeEditor.conflictingLines.background', 'The background of the "Conflicting Lines" text.'));
const contentTransparency = 0.4;
export const conflictInput1Background = registerColor('mergeEditor.conflict.input1.background', transparent(mergeCurrentHeaderBackground, contentTransparency), localize('mergeEditor.conflict.input1.background', 'The background color of decorations in input 1.'));
export const conflictInput2Background = registerColor('mergeEditor.conflict.input2.background', transparent(mergeIncomingHeaderBackground, contentTransparency), localize('mergeEditor.conflict.input2.background', 'The background color of decorations in input 2.'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6ImZpbGU6Ly8vVXNlcnMvYWR2aWthci9Eb2N1bWVudHMvYXJjaGl0ZWN0L2FyY2gyL0FyY2hJREUvc3JjLyIsInNvdXJjZXMiOlsidnMvd29ya2JlbmNoL2NvbnRyaWIvbWVyZ2VFZGl0b3IvYnJvd3Nlci92aWV3L2NvbG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O2dHQUdnRztBQUVoRyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLDZCQUE2QixFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUVoSyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsYUFBYSxDQUNoQywrQkFBK0IsRUFDL0IsV0FBVyxFQUNYLFFBQVEsQ0FBQywrQkFBK0IsRUFBRSxtQ0FBbUMsQ0FBQyxDQUM5RSxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLGFBQWEsQ0FDcEMsb0NBQW9DLEVBQ3BDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLFdBQVcsR0FBRyxFQUNyRixRQUFRLENBQUMsb0NBQW9DLEVBQUUsd0NBQXdDLENBQUMsQ0FDeEYsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxhQUFhLENBQ3BDLG1DQUFtQyxFQUNuQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxXQUFXLEdBQUcsRUFDckYsUUFBUSxDQUFDLG1DQUFtQyxFQUFFLDJDQUEyQyxDQUFDLENBQzFGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsYUFBYSxDQUN4Qyx3Q0FBd0MsRUFDeEMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxHQUFHLEVBQ3JGLFFBQVEsQ0FBQyx3Q0FBd0MsRUFBRSxnREFBZ0QsQ0FBQyxDQUNwRyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0NBQWdDLEdBQUcsYUFBYSxDQUM1RCxnREFBZ0QsRUFDaEQsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxHQUFHLEVBQ3JGLFFBQVEsQ0FBQyxnREFBZ0QsRUFBRSxvREFBb0QsQ0FBQyxDQUNoSCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBQUcsYUFBYSxDQUMxRCw4Q0FBOEMsRUFDOUMsU0FBUyxFQUNULFFBQVEsQ0FBQyw4Q0FBOEMsRUFBRSxrREFBa0QsQ0FBQyxDQUM1RyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBQUcsYUFBYSxDQUMxRCw4Q0FBOEMsRUFDOUMsV0FBVyxFQUNYLFFBQVEsQ0FBQyw4Q0FBOEMsRUFBRSxrREFBa0QsQ0FBQyxDQUM1RyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsYUFBYSxDQUN4RCw0Q0FBNEMsRUFDNUMsV0FBVyxFQUNYLFFBQVEsQ0FBQyw0Q0FBNEMsRUFBRSxnREFBZ0QsQ0FBQyxDQUN4RyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sd0NBQXdDLEdBQUcsYUFBYSxDQUNwRSxtREFBbUQsRUFDbkQsV0FBVyxFQUNYLFFBQVEsQ0FBQyxtREFBbUQsRUFBRSw4Q0FBOEMsQ0FBQyxDQUM3RyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sMENBQTBDLEdBQUcsYUFBYSxDQUN0RSxxREFBcUQsRUFDckQsV0FBVyxFQUNYLFFBQVEsQ0FBQyxxREFBcUQsRUFBRSw4Q0FBOEMsQ0FBQyxDQUMvRyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsYUFBYSxDQUN0RCx5Q0FBeUMsRUFDekMsV0FBVyxFQUNYLFFBQVEsQ0FBQyx5Q0FBeUMsRUFBRSxpREFBaUQsQ0FBQyxDQUN0RyxDQUFDO0FBRUYsTUFBTSxtQkFBbUIsR0FBRyxHQUFHLENBQUM7QUFDaEMsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsYUFBYSxDQUNwRCx3Q0FBd0MsRUFDeEMsV0FBVyxDQUFDLDRCQUE0QixFQUFFLG1CQUFtQixDQUFDLEVBQzlELFFBQVEsQ0FBQyx3Q0FBd0MsRUFBRSxpREFBaUQsQ0FBQyxDQUNyRyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsYUFBYSxDQUNwRCx3Q0FBd0MsRUFDeEMsV0FBVyxDQUFDLDZCQUE2QixFQUFFLG1CQUFtQixDQUFDLEVBQy9ELFFBQVEsQ0FBQyx3Q0FBd0MsRUFBRSxpREFBaUQsQ0FBQyxDQUNyRyxDQUFDIn0=